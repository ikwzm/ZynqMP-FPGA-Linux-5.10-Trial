diff --git a/drivers/gpu/drm/lima/lima_device.c b/drivers/gpu/drm/lima/lima_device.c
index 36c990589..ddbeb2824 100644
--- a/drivers/gpu/drm/lima/lima_device.c
+++ b/drivers/gpu/drm/lima/lima_device.c
@@ -85,13 +85,11 @@ static int lima_clk_enable(struct lima_device *dev)
 {
 	int err;
 
-	err = clk_prepare_enable(dev->clk_bus);
-	if (err)
-		return err;
-
-	err = clk_prepare_enable(dev->clk_gpu);
-	if (err)
-		goto error_out0;
+	if (dev->clks) {
+		err = clk_bulk_prepare_enable(dev->num_clks, dev->clks);
+		if (err)
+			return err;
+	}
 
 	if (dev->reset) {
 		err = reset_control_deassert(dev->reset);
@@ -105,9 +103,8 @@ static int lima_clk_enable(struct lima_device *dev)
 	return 0;
 
 error_out1:
-	clk_disable_unprepare(dev->clk_gpu);
-error_out0:
-	clk_disable_unprepare(dev->clk_bus);
+	if (dev->clks)
+		clk_bulk_disable_unprepare(dev->num_clks, dev->clks);
 	return err;
 }
 
@@ -115,31 +112,31 @@ static void lima_clk_disable(struct lima_device *dev)
 {
 	if (dev->reset)
 		reset_control_assert(dev->reset);
-	clk_disable_unprepare(dev->clk_gpu);
-	clk_disable_unprepare(dev->clk_bus);
+	if (dev->clks)
+		clk_bulk_disable_unprepare(dev->num_clks, dev->clks);
 }
 
 static int lima_clk_init(struct lima_device *dev)
 {
 	int err;
+	int i;
 
-	dev->clk_bus = devm_clk_get(dev->dev, "bus");
-	if (IS_ERR(dev->clk_bus)) {
-		err = PTR_ERR(dev->clk_bus);
-		if (err != -EPROBE_DEFER)
-			dev_err(dev->dev, "get bus clk failed %d\n", err);
-		dev->clk_bus = NULL;
+	dev->clks = NULL;
+	dev->num_clks = devm_clk_bulk_get_all(dev->dev, &dev->clks);
+	if (dev->num_clks < 0) {
+		err = dev->num_clks;
+		dev->num_clks = 0;
 		return err;
 	}
 
-	dev->clk_gpu = devm_clk_get(dev->dev, "core");
-	if (IS_ERR(dev->clk_gpu)) {
-		err = PTR_ERR(dev->clk_gpu);
-		if (err != -EPROBE_DEFER)
-			dev_err(dev->dev, "get core clk failed %d\n", err);
-		dev->clk_gpu = NULL;
-		return err;
-	}
+        dev->clk_gpu = NULL;
+	for (i = 0 ; i < dev->num_clks ; i++) {
+            if ((strcmp(dev->clks[i].id, "core") == 0) ||
+                (strcmp(dev->clks[i].id, "gpu" ) == 0)) {
+                dev->clk_gpu = dev->clks[i].clk;
+                break;
+            }
+        }
 
 	dev->reset = devm_reset_control_array_get_optional_shared(dev->dev);
 	if (IS_ERR(dev->reset)) {
@@ -413,8 +410,11 @@ int lima_device_init(struct lima_device *ldev)
 	INIT_LIST_HEAD(&ldev->error_task_list);
 	mutex_init(&ldev->error_task_list_lock);
 
-	dev_info(ldev->dev, "bus rate = %lu\n", clk_get_rate(ldev->clk_bus));
-	dev_info(ldev->dev, "mod rate = %lu", clk_get_rate(ldev->clk_gpu));
+	for (i = 0 ; i < ldev->num_clks ; i++) {
+		const char* id = ldev->clks[i].id;
+		unsigned long rate = clk_get_rate(ldev->clks[i].clk);
+		dev_info(ldev->dev, "%s rate = %lu", id, rate);
+	}
 
 	return 0;
 
diff --git a/drivers/gpu/drm/lima/lima_device.h b/drivers/gpu/drm/lima/lima_device.h
index 41b9d7b4b..6ce3a3f98 100644
--- a/drivers/gpu/drm/lima/lima_device.h
+++ b/drivers/gpu/drm/lima/lima_device.h
@@ -85,7 +85,8 @@ struct lima_device {
 	int num_pp;
 
 	void __iomem *iomem;
-	struct clk *clk_bus;
+	int num_clks;
+	struct clk_bulk_data *clks;
 	struct clk *clk_gpu;
 	struct reset_control *reset;
 	struct regulator *regulator;
